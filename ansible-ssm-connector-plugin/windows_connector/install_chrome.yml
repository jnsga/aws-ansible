---
# Wait for SSM Agent to be available on the Instance
# - name: Wait for connection to be available
#   hosts: all
#   vars:
#     ansible_connection: aws_ssm
#     ansible_aws_ssm_bucket_name: trainee-bkt
#     ansible_aws_ssm_region: eu-central-1
#     # When the S3 bucket isn't in the same region as the Instance
#     # Explicitly setting the addressing style to 'virtual' may be necessary
#     # https://repost.aws/knowledge-center/s3-http-307-response
#     ansible_aws_ssm_s3_addressing_style: virtual
#   tasks:
#     - name: Wait for connection
#       wait_for_connection:

# Stop Spooler Process on Windows Instances
# - name: Stop Spooler Service on Windows Instances
#   hosts: all
#   vars:
#     ansible_connection: aws_ssm
#     ansible_shell_type: powershell
#     ansible_aws_ssm_bucket_name: trainee-bkt
#     ansible_aws_ssm_region: eu-central-1
#   tasks:
#     - name: Stop spooler service
#       win_service:
#         name: spooler
#         state: stopped



# Create a directory in Windows Instances
- name: Create a directory in Windows Instance
  hosts: all
  vars:
    ansible_connection: aws_ssm
    ansible_shell_type: powershell
    ansible_aws_ssm_bucket_name: trainee-bkt
    ansible_aws_ssm_region: eu-central-1
  tasks:
    - name: Create a Directory
      win_file:
        path: C:\temp2
        state: directory



# Execution: ansible-playbook linux.yaml -i aws_ec2.yml
# =====================================================
# # aws_ec2.yml (Dynamic Inventory - Windows)
# plugin: aws_ec2
# regions:
#   - us-east-1
# hostnames:
#   - instance-id
# # This will return the Instances with the tag "SSMTag" set to "ssmwindows"
# filters:
#   tag:SSMTag: ssmwindows
# -----------------------
- name: Create a dir.
  hosts: all
  gather_facts: false
  vars:
    ansible_connection: aws_ssm
    ansible_shell_type: powershell
    ansible_aws_ssm_bucket_name: trainee-bkt
    ansible_aws_ssm_region: eu-central-1
  tasks:
    - name: Create the directory
      win_file:
        path: C:\Temp\SSM_Testing5
        state: directory


- name: Install Chrome using Chocolatey
  hosts: all
  gather_facts: false
  vars:
    ansible_connection: aws_ssm
    ansible_shell_type: powershell
    ansible_aws_ssm_bucket_name: trainee-bkt
    ansible_aws_ssm_region: eu-central-1
  tasks:
    - name: Install Chocolatey
      win_shell: |
        Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))

    - name: Install Google Chrome using Chocolatey
      win_chocolatey:
        name: googlechrome
        state: present

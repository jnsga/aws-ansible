---
# Wait for SSM Agent to be available on the Instance
- name: Wait for connection to be available
  hosts: all
  vars:
    ansible_connection: aws_ssm
    ansible_aws_ssm_bucket_name: trainee-bkt
    ansible_aws_ssm_region: eu-central-1
    # When the S3 bucket isn't in the same region as the Instance
    # Explicitly setting the addressing style to 'virtual' may be necessary
    # https://repost.aws/knowledge-center/s3-http-307-response
    # ansible_aws_ssm_s3_addressing_style: virtual
  tasks:
    - name: Wait for connection
      wait_for_connection:



# Install a Nginx Package on Linux Instance
- name: Install a Nginx Package
  hosts: all
  become: true
  vars:
    ansible_connection: aws_ssm
    ansible_aws_ssm_bucket_name: trainee-bkt
    ansible_aws_ssm_region: eu-central-1
  tasks:
    - name: Install a Nginx Package
      dnf:
        name: nginx
        state: present
    - name: Start and enable nginx service
      service:
        name: nginx
        state: started
        enabled: yes













# Stop Spooler Process on Windows Instances
# - name: Stop Spooler Service on Windows Instances
#   vars:
#     ansible_connection: aws_ssm
#     ansible_shell_type: powershell
#     ansible_aws_ssm_bucket_name: trainee-bkt
#     ansible_aws_ssm_region: us-east-1
#   tasks:
#     - name: Stop spooler service
#       win_service:
#         name: spooler
#         state: stopped

# Create a directory in Windows Instances
# - name: Create a directory in Windows Instance
#   vars:
#     ansible_connection: aws_ssm
#     ansible_shell_type: powershell
#     ansible_aws_ssm_bucket_name: trainee-bkt
#     ansible_aws_ssm_region: us-east-1
#   tasks:
#     - name: Create a Directory
#       win_file:
#         path: C:\Windows\temp
#         state: directory

# ---

# Making use of Dynamic Inventory Plugin
# =======================================
# # aws_ec2.yml (Dynamic Inventory - Linux)
# plugin: aws_ec2
# regions:
#   - us-east-1
# hostnames:
#   - instance-id
# # This will return the Instances with the tag "SSMTag" set to "ssmlinux"
# filters:
#   tag:SSMTag: ssmlinux
# -----------------------
# - name: install aws-cli
#   hosts: all
#   gather_facts: false
#   vars:
#     ansible_connection: aws_ssm
#     ansible_aws_ssm_bucket_name: trainee-bkt
#     ansible_aws_ssm_region: us-east-1
#   tasks:
#     - name: aws-cli
#       raw: yum install -y awscli
#       tags: aws-cli

# ---

# Execution: ansible-playbook linux.yaml -i aws_ec2.yml
# =====================================================
# # aws_ec2.yml (Dynamic Inventory - Windows)
# plugin: aws_ec2
# regions:
#   - us-east-1
# hostnames:
#   - instance-id
# # This will return the Instances with the tag "SSMTag" set to "ssmwindows"
# filters:
#   tag:SSMTag: ssmwindows
# -----------------------
# - name: Create a dir.
#   hosts: all
#   gather_facts: false
#   vars:
#     ansible_connection: aws_ssm
#     ansible_shell_type: powershell
#     ansible_aws_ssm_bucket_name: trainee-bkt
#     ansible_aws_ssm_region: us-east-1
#   tasks:
#     - name: Create the directory
#       win_file:
#         path: C:\Temp\SSM_Testing5
#         state: directory

# ---

# Execution:  ansible-playbook win_file.yaml -i aws_ec2.yml
# The playbook tasks will get executed on the instance ids returned from the dynamic inventory plugin using ssm connection.

# Install a Nginx Package on Linux Instance; with specific SSE CMK used for the file transfer
# - name: Install a Nginx Package
#   vars:
#     ansible_connection: aws_ssm
#     ansible_aws_ssm_bucket_name: trainee-bkt
#     ansible_aws_ssm_region: eu-central-1
#     ansible_aws_ssm_bucket_sse_mode: 'aws:kms'
#     ansible_aws_ssm_bucket_sse_kms_key_id: alias/kms-key-alias
#   tasks:
#     - name: Install a Nginx Package
#       yum:
#         name: nginx
#         state: present

# Install a Nginx Package on Linux Instance; using the specified SSM document
# - name: Install a Nginx Package
#   vars:
#     ansible_connection: aws_ssm
#     ansible_aws_ssm_bucket_name: trainee-bkt
#     ansible_aws_ssm_region: eu-central-1
#     ansible_aws_ssm_document: nameofthecustomdocument
#   tasks:
#     - name: Install a Nginx Package
#       yum:
#         name: nginx
#         state: present
